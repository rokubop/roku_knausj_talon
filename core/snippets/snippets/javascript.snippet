language: javascript
---

name: forInLoopStatement
phrase: for in
insertionScope: statement
-
for (const $1 in $2) {
    $0
}
---

name: anonymousFunctionDeclarationAndCall
phrase: self calling
-
(() => {
    $0
})();
---

name: importStarStatement
phrase: import star
-
import * as $0 from "$0";
---

name: importFromStatement
phrase: import from | import
-
import $0 from "$0";
---

name: namedLambdaExpression
phrase: arrow funk | con lambda
insertionScope: statement
-
const $1 = ($2) => {
    $0
}
---

name: reactUseState
phrase: use state
insertionScope: statement
-
const [$1, set$1] = useState($0);
---

name: reactUseEffect
phrase: use effect
insertionScope: statement
-
useEffect(() => {
    $0
}, []);
---

name: constStatement
phrase: const | con
insertionScope: statement
-
const $1 = $0
---

name: letStatement
phrase: let
insertionScope: statement
-
let $1 = $0
---

name: reactComponent
phrase: component
insertionScope: statement
$1.insertionFormatter: PUBLIC_CAMEL_CASE
-
const $1 = ({ $2 }) => {
    $0
}
---
